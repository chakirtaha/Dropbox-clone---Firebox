import React, {Component} from 'react';
import Dropzone from 'react-dropzone';
import { connect } from 'react-redux'
import { upload } from '../../store/actions/uploadActions'




 class Uploader extends Component {
    
    state = {
        name:'',
        size:''
      };
    
    onDrop = (files) => {
      this.setState({files})
    };
    
    handleClick = (e) => {
        e.preventDefault();
        // console.log(this.state);
        this.props.upload(this.state);
        
      }
  

  render() {
    const files = this.state.files.map(file => (
        <li key={file.name}>
          {file.name} - {file.size} bytes
        </li>
 
      ));
      console.log(files)

    return (
      <Dropzone onDrop={this.onDrop}>
        {({getRootProps, getInputProps}) => (
          <section className="container">
            <div {...getRootProps({className: 'dropzone'})}>
              <input {...getInputProps()} />
              <p>Drag 'n' drop some files here, or click to select files</p>
            </div>
            <aside>
              <h4>File</h4>
              <ul>{files}</ul>
              
              <div className="input-field">
                 <button className="btn pink lighten-1" onClick={this.handleClick}>Create</button>
              </div>
            </aside>
          </section>
        )}
      </Dropzone>
    );
  }
}
const mapStateToProps = (state) => {
    return {
      auth: state.firebase.auth
    }
  }
  
  const mapDispatchToProps = dispatch => {
    return {
      upload: (file) => dispatch(upload(file))
    }
  }
  
  export default connect(mapStateToProps, mapDispatchToProps)(Uploader) 
  